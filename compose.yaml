services:
  authservice-api:
    build:
      context: .
      dockerfile: AuthService.Api/Dockerfile
    depends_on:
      - postgres-auth
      - authservice-migrator
      - minio
    ports:
      - "${AUTHSERVICE_PORT}:${AUTHSERVICE_INTERNAL_PORT}"
    environment:
      - ConnectionStrings__DefaultConnection=${AUTHSERVICE_CONNECTION_STRING}
      - ASPNETCORE_URLS=http://+:${AUTHSERVICE_INTERNAL_PORT}
    volumes:
      - db_auth_data:/var/lib/postgresql/data
    env_file:
      - .env
      
  postgres-auth:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_AUTHSERVICE_USER}
      POSTGRES_PASSWORD: ${POSTGRES_AUTHSERVICE_PASSWORD}
      POSTGRES_DB: ${POSTGRES_AUTHSERVICE_DB}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "${POSTGRES_AUTHSERVICE_PORT}:${POSTGRES_AUTHSERVICE_INTERNAL_PORT}"
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    env_file:
      - .env
    
  authservice-migrator:
    build:
      context: .
      dockerfile: AuthService.Migrator/Dockerfile
    depends_on:
      - postgres-auth
    environment:
      - ConnectionStrings__DefaultConnection=${AUTHSERVICE_CONNECTION_STRING}
    restart: no
    env_file:
      - .env
    
  minio:
    image: minio/minio
    ports:
      - "${MINIO_PORT}:${MINIO_PORT}"
      - "${MINIO_INTERNAL_PORT}:${MINIO_INTERNAL_PORT}" 
    volumes:
      - minio_data:/data 
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET}
    command: server /data --console-address ":9001" 
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3  
    
volumes:
  db_auth_data:
  minio_data:

